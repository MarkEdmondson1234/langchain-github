substitutions:
  _IMAGE_NAME: your-image-name
  _SERVICE_NAME: your-service-name
  _REGION: your-region
  _GCS_BUCKET: your-gcs-bucket
  _SERVICE_ACCOUNT: your-service@your-project.iam.gserviceaccount.com

steps:
  - name: 'gcr.io/cloud-builders/docker'
    entrypoint: 'bash'
    secretEnv: ["OPENAI_API_KEY", "SUPABASE_URL", "SUPABASE_KEY"]
    args:
    - '-c'
    - |
      cat <<EOF >Dockerfile_cloudrun
      FROM gcr.io/$PROJECT_ID/prebuild/${_IMAGE_NAME}

      COPY . .

      EXPOSE 8080
      ENV SUPABASE_URL=$$SUPABASE_URL
      ENV SUPABASE_KEY=$$SUPABASE_KEY
      ENV OPENAI_API_KEY=$$OPENAI_API_KEY
      ENV GCS_BUCKET=${_GCS_BUCKET}

      CMD ["python", "webapp/app.py"]
      EOF

  - name: 'gcr.io/cloud-builders/docker'
    args: ['build', '-t', 'gcr.io/$PROJECT_ID/${_IMAGE_NAME}', '-f', 'Dockerfile_cloudrun', '.']

  - name: 'gcr.io/cloud-builders/docker'
    args: ['push', 'gcr.io/$PROJECT_ID/${_IMAGE_NAME}']

  # Deploy the image to Cloud Run
  - name: "gcr.io/cloud-builders/gcloud"
    id: deploy cloud run
    entrypoint: bash
    args:
      - "-c"
      - |
        gcloud run deploy ${_SERVICE_NAME} --image gcr.io/$PROJECT_ID/${_IMAGE_NAME} \
           --region ${_REGION} \
           --platform managed \
           --allow-unauthenticated \
           --memory 1Gi \
           --cpu 1 \
           --max-instances 2 \
           --service-account ${_SERVICE_ACCOUNT}

availableSecrets:
  secretManager:
  - versionName: projects/$PROJECT_ID/secrets/OPENAI_API_KEY/versions/latest
    env: OPENAI_API_KEY
  - versionName: projects/$PROJECT_ID/secrets/SUPABASE_URL/versions/latest
    env: SUPABASE_URL
  - versionName: projects/$PROJECT_ID/secrets/SUPABASE_KEY/versions/latest
    env: SUPABASE_KEY